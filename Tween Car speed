_G.ToolgameSpeed = true
local speed = 300
local targetPosition = Vector3.new(0, 100, 0)

local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

local activeTweens = {}

local function getSeat()
    for _, seat in pairs(workspace:GetDescendants()) do
        if (seat:IsA("Seat") or seat:IsA("VehicleSeat")) and seat.Occupant == character:FindFirstChild("Humanoid") then
            return seat
        end
    end
end

local function tweenPart(part, destination)
    if not _G.ToolgameSpeed then return end
    local distance = (part.Position - destination).Magnitude
    local time = distance / speed
    local tweenInfo = TweenInfo.new(time, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(part, tweenInfo, {CFrame = CFrame.new(destination)})
    tween:Play()
    table.insert(activeTweens, tween)
end

game:GetService("RunService").RenderStepped:Connect(function()
    if not _G.ToolgameSpeed then
        for _, tween in pairs(activeTweens) do
            tween:Cancel()
        end
        activeTweens = {}
    end
end)

tweenPart(hrp, targetPosition)

local seat = getSeat()
if seat then
    local model = seat.Parent or seat
    for _, part in pairs(model:GetDescendants()) do
        if part:IsA("BasePart") then
            tweenPart(part, targetPosition)
        end
    end
end
