loadstring(game:HttpGet("https://github.com/Generallua/Script.com/raw/refs/heads/main/Esp"))()

if _G.Sharkout then
    local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local player = Players.LocalPlayer

spawn(function()
    while true do
        wait(1)
        if player.Team and player.Team.Name == "Shark" then
            TeleportService:Teleport(game.PlaceId, player)
            break
        end
    end
end)
end

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

if playerGui:FindFirstChild("CompactGUI") then
    playerGui.CompactGUI:Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CompactGUI"
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 180, 0, 280)
mainFrame.Position = UDim2.new(0, 20, 0, 50)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 8)
local stroke = Instance.new("UIStroke", mainFrame)
stroke.Color = Color3.fromRGB(255, 255, 255)
stroke.Thickness = 2

local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 30)
header.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
header.BorderSizePixel = 0
header.Parent = mainFrame
Instance.new("UICorner", header).CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -30, 1, 0)
title.Position = UDim2.new(0, 30, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Shark Bite1"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = header

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 30, 1, 0)
toggleButton.Position = UDim2.new(0, 0, 0, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Text = "<>"
toggleButton.Parent = header
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 8)

local bodyFrame = Instance.new("Frame")
bodyFrame.Size = UDim2.new(1, 0, 1, -31)
bodyFrame.Position = UDim2.new(0, 0, 0, 30)
bodyFrame.BackgroundTransparency = 1
bodyFrame.Parent = mainFrame

local function runOnRespawn(func)
    local function runner(character)
        func()
    end
    if player.Character then runner(player.Character) end
    player.CharacterAdded:Connect(runner)
end

local function createButton(name, position, size, onOpenFunc, onCloseFunc)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    button.BorderSizePixel = 0
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 16
    button.Text = name .. ": OFF"
    button.Parent = bodyFrame
    Instance.new("UICorner", button).CornerRadius = UDim.new(0, 6)

    local toggled = false
    button.MouseButton1Click:Connect(function()
        toggled = not toggled
        button.Text = name .. (toggled and ": ON" or ": OFF")
        if toggled and onOpenFunc then
            onOpenFunc()
        elseif not toggled and onCloseFunc then
            onCloseFunc()
        end
    end)

    return button
end

local buttons = {}

buttons["safe zone"] = createButton("safe zone", UDim2.new(0, 15, 0, 10), UDim2.new(0, 150, 0, 40),
function()
    _G.Tp = true
    runOnRespawn(function()
        spawn(function()
            while _G.Tp do
                wait(1)
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    player.Character.HumanoidRootPart.CFrame = CFrame.new(45.66, 251.29, 112.10)
                end
            end
        end)
    end)
end,
function()
    _G.Tp = false
    wait(1.5)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = CFrame.new(17.02, 285.92, -31.10)
    end
end)

buttons["Shark"] = createButton("Shark", UDim2.new(0, 15, 0, 60), UDim2.new(0, 150, 0, 40),
function()
    _G.Shark = true
    runOnRespawn(function()
        spawn(function()
            while _G.Shark do
                wait(0)
                local char = player.Character
                if not char or not char:FindFirstChild("HumanoidRootPart") then continue end
                local hrp = char.HumanoidRootPart
                local camera = workspace.CurrentCamera
                local targetPos = Vector3.new(6, 306, 16)

                if player.Team and player.Team.Name == "Survivor" then
                    local sharks = workspace:WaitForChild("Sharks"):GetChildren()
                    local validSharks = {}
                    for _, shark in ipairs(sharks) do
                        if shark:IsA("Model") then
                            local mainPart = shark.PrimaryPart or shark:FindFirstChildWhichIsA("BasePart")
                            if mainPart and (mainPart.Position - targetPos).Magnitude <= 10000 then
                                table.insert(validSharks, mainPart)
                            end
                        end
                    end

                    local canMove = true
                    for i = 1, #validSharks-1 do
                        for j = i+1, #validSharks do
                            if (validSharks[i].Position - validSharks[j].Position).Magnitude < 200 then
                                canMove = false
                                break
                            end
                        end
                        if not canMove then break end
                    end
                    if not canMove or #validSharks == 0 then continue end

                    local closest, dist = nil, math.huge
                    for _, part in ipairs(validSharks) do
                        local d = (part.Position - targetPos).Magnitude
                        if d < dist then dist = d; closest = part end
                    end
                    if closest then
                        camera.CFrame = CFrame.new(camera.CFrame.Position, closest.Position)
                        TweenService:Create(hrp, TweenInfo.new(1/929, Enum.EasingStyle.Linear), {CFrame = closest.CFrame * CFrame.new(0,30,-20)}):Play()
                    end
                end
            end
        end)
    end)
end,
function() _G.Shark = false end)

buttons["auto shoot"] = createButton("auto shoot", UDim2.new(0, 15, 0, 110), UDim2.new(0, 150, 0, 40),
function()
    _G.hit = true
    runOnRespawn(function()
        spawn(function()
            while _G.hit do
                wait(0.1)
                local gui = player:FindFirstChild("PlayerGui")
                if gui and gui:FindFirstChild("WeaponDisplay") then
                    local btn = gui.WeaponDisplay.Frame:FindFirstChild("ShootButton")
                    if btn then
                        firesignal(btn.MouseButton1Click)
                        firesignal(btn.MouseButton1Down)
                        firesignal(btn.MouseButton1Up)
                        firesignal(btn.Activated)
                        firesignal(btn.TouchTap)
                    end
                end
            end
        end)
    end)
end,
function() _G.hit = false end)

buttons["auto equip"] = createButton("auto equip", UDim2.new(0, 15, 0, 160), UDim2.new(0, 150, 0, 40),
function()
    _G.hapoon = true
    runOnRespawn(function()
        spawn(function()
            while _G.hapoon do
                wait(0.1)
                local backpack = player:FindFirstChild("Backpack")
                if backpack and player.Character and player.Character:FindFirstChild("Humanoid") then
                    for _, tool in ipairs(backpack:GetChildren()) do
                        if tool:IsA("Tool") and tool.Name:lower():find("harpoon") then
                            player.Character.Humanoid:EquipTool(tool)
                            break
                        end
                    end
                end
            end
        end)
    end)
end,
function() _G.hapoon = false end)

buttons["inf"] = createButton("inf", UDim2.new(0, 15, 0, 210), UDim2.new(0, 150, 0, 40),
function()
    _G.inf = true
    runOnRespawn(function()
        spawn(function()
            while _G.inf do
                wait(1)
                local aux = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ohaux.lua"))()
                local char = player.Character
                if char and char:FindFirstChild("Harpoon") then
                    local harpoonScript = char.Harpoon:FindFirstChild("LocalScript")
                    if harpoonScript then
                        local closure = aux.searchClosure(harpoonScript, "reload", 4, {"Enum","UserInputState","Cancel",Enum.UserInputState.Cancel,1,"script"})
                        debug.setupvalue(closure, 4, 9e999)
                    end
                end
            end
        end)
    end)
end,
function() _G.inf = false end)

-- เปิดทุกปุ่มอัตโนมัติถ้า _G.farm = true
if _G.farm then
    for _, btn in pairs(buttons) do
        btn:Activate()
    end
end

local collapsed = false
toggleButton.MouseButton1Click:Connect(function()
    collapsed = not collapsed
    bodyFrame.Visible = not collapsed
    mainFrame.Size = collapsed and UDim2.new(0, 180, 0, 30) or UDim2.new(0, 180, 0, 280)
end)

-- Dragging
local dragging, dragInput, startPos, startPosFrame = false, nil, nil, nil
local function startDrag(input)
    dragging = true
    startPos = input.Position
    startPosFrame = mainFrame.Position
    input.Changed:Connect(function()
        if input.UserInputState == Enum.UserInputState.End then dragging = false end
    end)
end
header.InputBegan:Connect(function(input)
    if input.UserInputState == Enum.UserInputState.End then dragging = false end
    end)
end
header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        startDrag(input)
    end
end)
header.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - startPos
        local newX = math.clamp(startPosFrame.X.Offset + delta.X, 0, workspace.CurrentCamera.ViewportSize.X - mainFrame.Size.X.Offset)
        local newY = math.clamp(startPosFrame.Y.Offset + delta.Y, 0, workspace.CurrentCamera.ViewportSize.Y - mainFrame.Size.Y.Offset)
        mainFrame.Position = UDim2.new(0, newX, 0, newY)
    end
end)
