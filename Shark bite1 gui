    _G.hapoon = true
    runOnRespawn(function()
        spawn(function()
            while _G.hapoon do
                wait(0.1)
                local backpack = player:FindFirstChild("Backpack")
                if backpack and player.Character and player.Character:FindFirstChild("Humanoid") then
                    for _, tool in ipairs(backpack:GetChildren()) do
if tool:IsA("Tool") and tool.Name:lower():find("harpoon") then
                            player.Character.Humanoid:EquipTool(tool)
                            break
                        end
                    end
                end
            end
        end)
    end)
end,
function() _G.hapoon = false end)

createButton("inf", UDim2.new(0, 15, 0, 210), UDim2.new(0, 150, 0, 40),
function()
    _G.inf = true
    runOnRespawn(function()
        spawn(function()
            while _G.inf do
                wait(1)
                local aux = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ohaux.lua"))()
                local char = player.Character
                if char and char:FindFirstChild("Harpoon") then
                    local harpoonScript = char.Harpoon:FindFirstChild("LocalScript")
                    if harpoonScript then
                        local closure = aux.searchClosure(harpoonScript, "reload", 4, {"Enum","UserInputState","Cancel",Enum.UserInputState.Cancel,1,"script"})
                        debug.setupvalue(closure, 4, 9e999)
                    end
                end
            end
        end)
    end)
end,
function() _G.inf = false end)

local collapsed = false
toggleButton.MouseButton1Click:Connect(function()
    collapsed = not collapsed
    bodyFrame.Visible = not collapsed
    mainFrame.Size = collapsed and UDim2.new(0, 180, 0, 30) or UDim2.new(0, 180, 0, 280)
end)

local dragging, dragInput, startPos, startPosFrame = false, nil, nil, nil
local function startDrag(input)
    dragging = true
    startPos = input.Position
    startPosFrame = mainFrame.Position
    input.Changed:Connect(function()
        if input.UserInputState == Enum.UserInputState.End then dragging = false end
    end)
end
header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        startDrag(input)
    end
end)
header.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - startPos
        local newX = math.clamp(startPosFrame.X.Offset + delta.X, 0, workspace.CurrentCamera.ViewportSize.X - mainFrame.Size.X.Offset)
        local newY = math.clamp(startPosFrame.Y.Offset + delta.Y, 0, workspace.CurrentCamera.ViewportSize.Y - mainFrame.Size.Y.Offset)
        mainFrame.Position = UDim2.new(0, newX, 0, newY)
    end
end)
